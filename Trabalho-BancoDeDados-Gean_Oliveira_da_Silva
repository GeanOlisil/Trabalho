#include <stdio.h>
#include <string.h>
#include <stdlib.h>
#include <ctype.h>

#define MAX_PESSOAS 100

struct Pessoa {
    char nome[50];
    int idade;
    char cpf[12]; // CPF com 11 dÃ­gitos + '\0'
};

int main() {
    struct Pessoa pessoas[MAX_PESSOAS];
    int total = 0;
    int opcao;

    do {
        printf("\n--- MENU PRINCIPAL ---\n");
        printf("1. Cadastrar nova pessoa\n");
        printf("2. Listar pessoas cadastradas\n");
        printf("3. Buscar pessoa por CPF\n");
        printf("0. Sair\n");
        printf("Escolha uma opcao: ");
        scanf("%d", &opcao);
        getchar(); // limpar buffer

        switch(opcao) {
            case 1:
                if (total >= MAX_PESSOAS) {
                    printf("Limite de cadastros atingido!\n");
                    break;
                }

                printf("Digite o nome: ");
                fgets(pessoas[total].nome, sizeof(pessoas[total].nome), stdin);
                pessoas[total].nome[strcspn(pessoas[total].nome, "\n")] = 0;

                printf("Digite a idade (0-120): ");
                int idade;
                scanf("%d", &idade);
                getchar();
                if (idade < 0 || idade > 120) {
                    printf("Idade invalida!\n");
                    break;
                }
                pessoas[total].idade = idade;

                printf("Digite o CPF (11 digitos): ");
                fgets(pessoas[total].cpf, sizeof(pessoas[total].cpf), stdin);
                pessoas[total].cpf[strcspn(pessoas[total].cpf, "\n")] = 0;

                if (strlen(pessoas[total].cpf) != 11) {
                    printf("CPF invalido! Deve conter 11 digitos.\n");
                    break;
                }

                for (int i = 0; i < 11; i++) {
                    if (!isdigit(pessoas[total].cpf[i])) {
                        printf("CPF deve conter apenas numeros.\n");
                        break;
                    }
                }

                printf("Pessoa cadastrada com sucesso!\n");
                total++;
                break;

            case 2:
                if (total == 0) {
                    printf("Nenhuma pessoa cadastrada.\n");
                } else {
                    printf("\n--- LISTA DE PESSOAS ---\n");
                    for (int i = 0; i < total; i++) {
                        printf("Nome: %s | Idade: %d | CPF: %s\n",
                            pessoas[i].nome, pessoas[i].idade, pessoas[i].cpf);
                    }
                }
                break;

            case 3:
                if (total == 0) {
                    printf("Nenhuma pessoa cadastrada para buscar.\n");
                    break;
                }

                char cpfBusca[12];
                printf("Digite o CPF a buscar: ");
                fgets(cpfBusca, sizeof(cpfBusca), stdin);
                cpfBusca[strcspn(cpfBusca, "\n")] = 0;

                int encontrado = 0;
                for (int i = 0; i < total; i++) {
                    if (strcmp(pessoas[i].cpf, cpfBusca) == 0) {
                        printf("Pessoa encontrada: %s, Idade: %d\n",
                            pessoas[i].nome, pessoas[i].idade);
                        encontrado = 1;
                        break;
                    }
                }

                if (!encontrado) {
                    printf("CPF nao encontrado.\n");
                }
                break;

            case 0:
                printf("Saindo do programa...\n");
                break;

            default:
                printf("Opcao invalida. Tente novamente.\n");
        }

    } while(opcao != 0);

    return 0;
}